// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#Calendar methods should render correctly 1`] = `
<styled.div
  className="wrapper"
  visibleMonths={3}
>
  <styled.button
    className={undefined}
    colors={
      Object {
        "background": "white",
        "border": "#e4e7e7",
        "disabled": "gray",
        "hover": "#e4e7e7",
        "selected": "rgb(244, 114, 49)",
        "selectedHover": "rgb(255, 141, 74)",
      }
    }
    data-test="rdl-prev-button"
    disabled={false}
    onClick={[Function]}
  >
    <Styled(ArrowLeft) />
  </styled.button>
  <styled.button
    className={undefined}
    colors={
      Object {
        "background": "white",
        "border": "#e4e7e7",
        "disabled": "gray",
        "hover": "#e4e7e7",
        "selected": "rgb(244, 114, 49)",
        "selectedHover": "rgb(255, 141, 74)",
      }
    }
    data-test="rdl-next-button"
    disabled={true}
    onClick={[Function]}
  >
    <Styled(ArrowRight) />
  </styled.button>
  <styled.div
    className={undefined}
  >
    <Styled(CalendarMonth)
      allowedPastDates={true}
      classes={Object {}}
      colors={
        Object {
          "background": "white",
          "border": "#e4e7e7",
          "disabled": "gray",
          "hover": "#e4e7e7",
          "selected": "rgb(244, 114, 49)",
          "selectedHover": "rgb(255, 141, 74)",
        }
      }
      disabledDates={Array []}
      future={false}
      hoveredDates={Array []}
      isFocused={false}
      month={2017-11-30T00:00:00.000Z}
      onHover={[Function]}
      selectDate={[Function]}
      selectedDates={Array []}
    />
    <Styled(CalendarMonth)
      allowedPastDates={true}
      classes={Object {}}
      colors={
        Object {
          "background": "white",
          "border": "#e4e7e7",
          "disabled": "gray",
          "hover": "#e4e7e7",
          "selected": "rgb(244, 114, 49)",
          "selectedHover": "rgb(255, 141, 74)",
        }
      }
      disabledDates={Array []}
      future={false}
      hoveredDates={Array []}
      isFocused={false}
      month={2017-12-31T00:00:00.000Z}
      onHover={[Function]}
      selectDate={[Function]}
      selectedDates={Array []}
    />
    <Styled(CalendarMonth)
      allowedPastDates={true}
      classes={Object {}}
      colors={
        Object {
          "background": "white",
          "border": "#e4e7e7",
          "disabled": "gray",
          "hover": "#e4e7e7",
          "selected": "rgb(244, 114, 49)",
          "selectedHover": "rgb(255, 141, 74)",
        }
      }
      disabledDates={Array []}
      future={false}
      hoveredDates={Array []}
      isFocused={false}
      month={2018-01-31T00:00:00.000Z}
      onHover={[Function]}
      selectDate={[Function]}
      selectedDates={Array []}
    />
  </styled.div>
</styled.div>
`;

exports[`#Calendar methods should render correctly with future enabled 1`] = `
<styled.div
  className="wrapper"
  visibleMonths={3}
>
  <styled.button
    className={undefined}
    colors={
      Object {
        "background": "white",
        "border": "#e4e7e7",
        "disabled": "gray",
        "hover": "#e4e7e7",
        "selected": "rgb(244, 114, 49)",
        "selectedHover": "rgb(255, 141, 74)",
      }
    }
    data-test="rdl-prev-button"
    disabled={false}
    onClick={[Function]}
  >
    <Styled(ArrowLeft) />
  </styled.button>
  <styled.button
    className={undefined}
    colors={
      Object {
        "background": "white",
        "border": "#e4e7e7",
        "disabled": "gray",
        "hover": "#e4e7e7",
        "selected": "rgb(244, 114, 49)",
        "selectedHover": "rgb(255, 141, 74)",
      }
    }
    data-test="rdl-next-button"
    disabled={true}
    onClick={[Function]}
  >
    <Styled(ArrowRight) />
  </styled.button>
  <styled.div
    className={undefined}
  >
    <Styled(CalendarMonth)
      allowedPastDates={true}
      classes={Object {}}
      colors={
        Object {
          "background": "white",
          "border": "#e4e7e7",
          "disabled": "gray",
          "hover": "#e4e7e7",
          "selected": "rgb(244, 114, 49)",
          "selectedHover": "rgb(255, 141, 74)",
        }
      }
      disabledDates={Array []}
      future={true}
      hoveredDates={Array []}
      isFocused={false}
      month={2018-01-31T00:00:00.000Z}
      onHover={[Function]}
      selectDate={[Function]}
      selectedDates={Array []}
    />
    <Styled(CalendarMonth)
      allowedPastDates={true}
      classes={Object {}}
      colors={
        Object {
          "background": "white",
          "border": "#e4e7e7",
          "disabled": "gray",
          "hover": "#e4e7e7",
          "selected": "rgb(244, 114, 49)",
          "selectedHover": "rgb(255, 141, 74)",
        }
      }
      disabledDates={Array []}
      future={true}
      hoveredDates={Array []}
      isFocused={false}
      month={2018-02-28T00:00:00.000Z}
      onHover={[Function]}
      selectDate={[Function]}
      selectedDates={Array []}
    />
    <Styled(CalendarMonth)
      allowedPastDates={true}
      classes={Object {}}
      colors={
        Object {
          "background": "white",
          "border": "#e4e7e7",
          "disabled": "gray",
          "hover": "#e4e7e7",
          "selected": "rgb(244, 114, 49)",
          "selectedHover": "rgb(255, 141, 74)",
        }
      }
      disabledDates={Array []}
      future={true}
      hoveredDates={Array []}
      isFocused={false}
      month={2018-03-31T00:00:00.000Z}
      onHover={[Function]}
      selectDate={[Function]}
      selectedDates={Array []}
    />
  </styled.div>
</styled.div>
`;
